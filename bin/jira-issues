#!/usr/bin/env bash

username=${JIRA_USERNAME:-$(git config --get jira.user)}
if [ $? -ne 0 ]; then
  echo "Neither JIRA_USERNAME nor the jira.user git config are set"
  # shellcheck disable=SC2016
  echo '  (Try `git config --global jira.user <your username>`)'
  exit 1
fi
password=${JIRA_PASSWORD:-$(git config --get jira.password)}
if [ $? -ne 0 ]; then
  echo "Neither JIRA_PASSWORD nor the jira.password git config are set"
  # shellcheck disable=SC2016
  echo '  (Try `git config --global jira.password <your password>`)'
  echo "  (but beware committing that config (~/.gitconfig) itself into git)"
  exit 1
fi
jarfile=${JIRA_JARFILE:-$(git config --get jira.jarfile)}
if [ $? -ne 0 ]; then
  echo "Neither JIRA_JARFILE nor the jira.jarfile git config are set"
  # shellcheck disable=SC2016
  echo '  (Try `git config --global jira.jarfile <somewhere>/lib/jira-cli-5.3.0.jar`)'
  echo "  (You'll need to download the JAR from https://bobswift.atlassian.net/wiki/display/ACLI/Downloads)"
  exit 1
fi
server=${JIRA_SERVER:-$(git config --get jira.server)}
if [ $? -ne 0 ]; then
  echo "Neither JIRA_SERVER nor the jira.server git config are set"
  # shellcheck disable=SC2016
  echo '  (Try `git config --global jira.server ...`)'
  exit 1
fi
jql=${JIRA_JQL:-$(git config --get jira.jql)}
if [ $? -ne 0 ]; then
  echo "Neither JIRA_JQL nor the jira.jql git config are set"
  # shellcheck disable=SC2016
  echo '  (Try `git config jira.jql ...`)'
  exit 1
fi

extra_jql='and assignee=currentUser()'

while getopts 'a' opt; do
  case $opt in
    a) extra_jql='';;
  esac
done


java -jar "$jarfile" --server "$server" --user "$username" --password "$password" --action getIssueList --columns key,summary,status --jql "$jql $extra_jql" | sed -E 's/^"|"$//g' | awk -F '"*,"*' 'NR > 2 && NF == 3 { print $1 "  " $2 " [" $3 "]" }'
